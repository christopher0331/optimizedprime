{"ast":null,"code":"var _jsxFileName = \"/Users/christopherhancock/Desktop/OptimizedPrime/optimizedprime/src/components/Canvas.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Canvas = props => {\n  _s();\n\n  const canvasRef = useRef(null);\n\n  const draw = (ctx, frameCount) => {\n    ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n    ctx.fillStyle = '#000000';\n    ctx.beginPath();\n    ctx.arc(50, 100, 20 * Math.sin(frameCount * 0.05) ** 2, 0, 2 * Math.PI);\n    ctx.fill();\n  };\n\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const context = canvas.getContext('2d');\n    let frameCount = 0;\n    let animationFrameId; //Our draw came here\n\n    const render = () => {\n      frameCount++;\n      draw(context, frameCount);\n      animationFrameId = window.requestAnimationFrame(render);\n    };\n\n    render();\n    return () => {\n      window.cancelAnimationFrame(animationFrameId);\n    };\n  }, [draw]);\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 12\n  }, this);\n};\n\n_s(Canvas, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = Canvas;\nexport default Canvas; // myImage.addEventListener('load', function(){\n//     const canvas = document.getElementsByClassName('canvas1')\n//     const ctx = canvas.getContext('2d');\n//     canvas.width = 500;\n//     canvas.height = 706;\n//     ctx.drawImage(myImage, 0, 0, canvas.width, canvas.height);\n//     let particlesArray = [];\n//     const numberOfParticles = 5000;\n//     class Particle {\n//         constructor(){\n//             this.x = Math.random() * canvas.width;\n//             this.y = 0;\n//             this.speed = 0;\n//             this.velocity = Math.random() * 0.5;\n//             this.size = Math.random() * 1.5 + 1;\n//         }\n//         update() {\n//             this.y+= this.velocity;\n//             if(this.y >= canvas.height){\n//                 this.y = 0;\n//                 this.x = Math.random() * canvas.width;\n//             }\n//         }\n//         draw(){\n//             ctx.beginPath();\n//             ctx.fillStyle = 'white';\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fill();\n//         }\n//     }\n//     function init(){\n//         for(let i = 0; i < numberOfParticles; i++){\n//             particlesArray.push(new Particle())\n//         }\n//     }\n//     init();\n//     function animate(){\n//         ctx.globalAlpha = 0.05;\n//         ctx.fillStyle = 'rgb(0,0,0)';\n//         ctx.fillRect(0,0,canvas.width, canvas.height);\n//         for(let i = 0; i < particlesArray.length; i++){\n//             particlesArray[i].update();\n//             particlesArray[i].draw();\n//         }\n//         requestAnimationFrame(animate);\n//     }\n//     animate()\n// });\n\nvar _c;\n\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"sources":["/Users/christopherhancock/Desktop/OptimizedPrime/optimizedprime/src/components/Canvas.js"],"names":["React","useRef","useEffect","Canvas","props","canvasRef","draw","ctx","frameCount","clearRect","canvas","width","height","fillStyle","beginPath","arc","Math","sin","PI","fill","current","context","getContext","animationFrameId","render","window","requestAnimationFrame","cancelAnimationFrame"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAwC,OAAxC;;;AAEA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AAAA;;AAEpB,QAAMC,SAAS,GAAGJ,MAAM,CAAC,IAAD,CAAxB;;AAEA,QAAMK,IAAI,GAAG,CAACC,GAAD,EAAMC,UAAN,KAAqB;AAC9BD,IAAAA,GAAG,CAACE,SAAJ,CAAc,CAAd,EAAiB,CAAjB,EAAoBF,GAAG,CAACG,MAAJ,CAAWC,KAA/B,EAAsCJ,GAAG,CAACG,MAAJ,CAAWE,MAAjD;AACAL,IAAAA,GAAG,CAACM,SAAJ,GAAgB,SAAhB;AACAN,IAAAA,GAAG,CAACO,SAAJ;AACAP,IAAAA,GAAG,CAACQ,GAAJ,CAAQ,EAAR,EAAY,GAAZ,EAAiB,KAAGC,IAAI,CAACC,GAAL,CAAST,UAAU,GAAC,IAApB,KAA2B,CAA/C,EAAkD,CAAlD,EAAqD,IAAEQ,IAAI,CAACE,EAA5D;AACAX,IAAAA,GAAG,CAACY,IAAJ;AACD,GANH;;AAQAjB,EAAAA,SAAS,CAAC,MAAM;AAEZ,UAAMQ,MAAM,GAAGL,SAAS,CAACe,OAAzB;AACA,UAAMC,OAAO,GAAGX,MAAM,CAACY,UAAP,CAAkB,IAAlB,CAAhB;AACA,QAAId,UAAU,GAAG,CAAjB;AACA,QAAIe,gBAAJ,CALY,CAOZ;;AACA,UAAMC,MAAM,GAAG,MAAM;AACnBhB,MAAAA,UAAU;AACVF,MAAAA,IAAI,CAACe,OAAD,EAAUb,UAAV,CAAJ;AACAe,MAAAA,gBAAgB,GAAGE,MAAM,CAACC,qBAAP,CAA6BF,MAA7B,CAAnB;AACD,KAJD;;AAKAA,IAAAA,MAAM;AAEN,WAAO,MAAM;AACXC,MAAAA,MAAM,CAACE,oBAAP,CAA4BJ,gBAA5B;AACD,KAFD;AAGD,GAlBM,EAkBJ,CAACjB,IAAD,CAlBI,CAAT;AAqBA,sBAAO;AAAQ,IAAA,GAAG,EAAED,SAAb;AAAA,OAA4BD;AAA5B;AAAA;AAAA;AAAA;AAAA,UAAP;AAEH,CAnCD;;GAAMD,M;;KAAAA,M;AAqCN,eAAeA,MAAf,C,CAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React,{ useRef, useEffect } from 'react';\n\nconst Canvas = props => {\n    \n    const canvasRef = useRef(null);\n\n    const draw = (ctx, frameCount) => {\n        ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height)\n        ctx.fillStyle = '#000000'\n        ctx.beginPath()\n        ctx.arc(50, 100, 20*Math.sin(frameCount*0.05)**2, 0, 2*Math.PI)\n        ctx.fill()\n      }\n      \n    useEffect(() => {\n    \n        const canvas = canvasRef.current\n        const context = canvas.getContext('2d')\n        let frameCount = 0\n        let animationFrameId\n        \n        //Our draw came here\n        const render = () => {\n          frameCount++\n          draw(context, frameCount)\n          animationFrameId = window.requestAnimationFrame(render)\n        }\n        render()\n        \n        return () => {\n          window.cancelAnimationFrame(animationFrameId)\n        }\n      }, [draw])\n\n\n    return <canvas ref={canvasRef} {...props} />\n\n}\n\nexport default Canvas;\n\n// myImage.addEventListener('load', function(){\n//     const canvas = document.getElementsByClassName('canvas1')\n\n//     const ctx = canvas.getContext('2d');\n//     canvas.width = 500;\n//     canvas.height = 706;\n    \n//     ctx.drawImage(myImage, 0, 0, canvas.width, canvas.height);\n\n//     let particlesArray = [];\n//     const numberOfParticles = 5000;\n\n//     class Particle {\n//         constructor(){\n//             this.x = Math.random() * canvas.width;\n//             this.y = 0;\n//             this.speed = 0;\n//             this.velocity = Math.random() * 0.5;\n//             this.size = Math.random() * 1.5 + 1;\n//         }\n\n//         update() {\n//             this.y+= this.velocity;\n//             if(this.y >= canvas.height){\n//                 this.y = 0;\n//                 this.x = Math.random() * canvas.width;\n//             }\n//         }\n\n//         draw(){\n//             ctx.beginPath();\n//             ctx.fillStyle = 'white';\n//             ctx.arc(this.x, this.y, this.size, 0, Math.PI * 2);\n//             ctx.fill();\n//         }\n//     }\n\n//     function init(){\n//         for(let i = 0; i < numberOfParticles; i++){\n//             particlesArray.push(new Particle())\n//         }\n//     }\n\n//     init();\n//     function animate(){\n//         ctx.globalAlpha = 0.05;\n//         ctx.fillStyle = 'rgb(0,0,0)';\n//         ctx.fillRect(0,0,canvas.width, canvas.height);\n\n//         for(let i = 0; i < particlesArray.length; i++){\n//             particlesArray[i].update();\n//             particlesArray[i].draw();\n//         }\n//         requestAnimationFrame(animate);\n//     }\n//     animate()\n// });\n"]},"metadata":{},"sourceType":"module"}