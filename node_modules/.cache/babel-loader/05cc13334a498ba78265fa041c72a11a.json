{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\"); // React hooks\n// eslint-disable-next-line no-unused-vars\n\n/**\n *\n * @param {MutableRefObject} target\n * @param {IntersectionObserverInit} options\n * @returns\n */\n\n\nvar useInViewport = function useInViewport(target, options, config, props) {\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  var {\n    onEnterViewport,\n    onLeaveViewport\n  } = props;\n  var [, forceUpdate] = (0, _react.useState)();\n  var observer = (0, _react.useRef)();\n  var inViewportRef = (0, _react.useRef)(false);\n  var intersected = (0, _react.useRef)(false);\n  var enterCountRef = (0, _react.useRef)(0);\n  var leaveCountRef = (0, _react.useRef)(0);\n\n  function startObserver(_ref) {\n    var {\n      observerRef\n    } = _ref;\n    var targetRef = target.current;\n\n    if (targetRef) {\n      var node = (0, _reactDom.findDOMNode)(targetRef);\n\n      if (node) {\n        observerRef == null ? void 0 : observerRef.observe(node);\n      }\n    }\n  }\n\n  function stopObserver(_ref2) {\n    var {\n      observerRef\n    } = _ref2;\n    var targetRef = target.current;\n\n    if (targetRef) {\n      var node = (0, _reactDom.findDOMNode)(targetRef);\n\n      if (node) {\n        observerRef == null ? void 0 : observerRef.unobserve(node);\n      }\n    }\n\n    observerRef == null ? void 0 : observerRef.disconnect();\n    observer.current = null;\n  }\n\n  function handleIntersection(entries) {\n    var entry = entries[0] || {};\n    var {\n      isIntersecting,\n      intersectionRatio\n    } = entry;\n    var isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n    if (!intersected.current && isInViewport) {\n      intersected.current = true;\n      onEnterViewport && onEnterViewport();\n      enterCountRef.current += 1;\n      inViewportRef.current = isInViewport;\n      forceUpdate(isInViewport);\n      return;\n    } // leave\n\n\n    if (intersected.current && !isInViewport) {\n      intersected.current = false;\n      onLeaveViewport && onLeaveViewport();\n\n      if (config.disconnectOnLeave && observer.current) {\n        // disconnect obsever on leave\n        observer.current.disconnect();\n      }\n\n      leaveCountRef.current += 1;\n      inViewportRef.current = isInViewport;\n      forceUpdate(isInViewport);\n    }\n  }\n\n  function initIntersectionObserver(_ref3) {\n    var {\n      observerRef\n    } = _ref3;\n\n    if (!observerRef) {\n      // $FlowFixMe\n      observer.current = new IntersectionObserver(handleIntersection, options);\n      return observer.current;\n    }\n\n    return observerRef;\n  }\n\n  (0, _react.useEffect)(() => {\n    var observerRef = observer.current; // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\n    observerRef = initIntersectionObserver({\n      observerRef\n    });\n    startObserver({\n      observerRef\n    });\n    return () => {\n      stopObserver({\n        observerRef\n      });\n    };\n  }, [target.current, options, config, onEnterViewport, onLeaveViewport]);\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current\n  };\n};\n\nvar _default = useInViewport;\nexports.default = _default;","map":{"version":3,"sources":["/Users/christopherhancock/Desktop/OptimizedPrime/optimizedprime/node_modules/react-in-viewport/dist/es/lib/useInViewport.js"],"names":["exports","__esModule","default","_react","require","_reactDom","useInViewport","target","options","config","props","disconnectOnLeave","onEnterViewport","onLeaveViewport","forceUpdate","useState","observer","useRef","inViewportRef","intersected","enterCountRef","leaveCountRef","startObserver","_ref","observerRef","targetRef","current","node","findDOMNode","observe","stopObserver","_ref2","unobserve","disconnect","handleIntersection","entries","entry","isIntersecting","intersectionRatio","isInViewport","initIntersectionObserver","_ref3","IntersectionObserver","useEffect","inViewport","enterCount","leaveCount","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _react = require(\"react\");\n\nvar _reactDom = require(\"react-dom\");\n\n// React hooks\n// eslint-disable-next-line no-unused-vars\n\n/**\n *\n * @param {MutableRefObject} target\n * @param {IntersectionObserverInit} options\n * @returns\n */\nvar useInViewport = function useInViewport(target, options, config, props) {\n  if (config === void 0) {\n    config = {\n      disconnectOnLeave: false\n    };\n  }\n\n  var {\n    onEnterViewport,\n    onLeaveViewport\n  } = props;\n  var [, forceUpdate] = (0, _react.useState)();\n  var observer = (0, _react.useRef)();\n  var inViewportRef = (0, _react.useRef)(false);\n  var intersected = (0, _react.useRef)(false);\n  var enterCountRef = (0, _react.useRef)(0);\n  var leaveCountRef = (0, _react.useRef)(0);\n\n  function startObserver(_ref) {\n    var {\n      observerRef\n    } = _ref;\n    var targetRef = target.current;\n\n    if (targetRef) {\n      var node = (0, _reactDom.findDOMNode)(targetRef);\n\n      if (node) {\n        observerRef == null ? void 0 : observerRef.observe(node);\n      }\n    }\n  }\n\n  function stopObserver(_ref2) {\n    var {\n      observerRef\n    } = _ref2;\n    var targetRef = target.current;\n\n    if (targetRef) {\n      var node = (0, _reactDom.findDOMNode)(targetRef);\n\n      if (node) {\n        observerRef == null ? void 0 : observerRef.unobserve(node);\n      }\n    }\n\n    observerRef == null ? void 0 : observerRef.disconnect();\n    observer.current = null;\n  }\n\n  function handleIntersection(entries) {\n    var entry = entries[0] || {};\n    var {\n      isIntersecting,\n      intersectionRatio\n    } = entry;\n    var isInViewport = typeof isIntersecting !== 'undefined' ? isIntersecting : intersectionRatio > 0; // enter\n\n    if (!intersected.current && isInViewport) {\n      intersected.current = true;\n      onEnterViewport && onEnterViewport();\n      enterCountRef.current += 1;\n      inViewportRef.current = isInViewport;\n      forceUpdate(isInViewport);\n      return;\n    } // leave\n\n\n    if (intersected.current && !isInViewport) {\n      intersected.current = false;\n      onLeaveViewport && onLeaveViewport();\n\n      if (config.disconnectOnLeave && observer.current) {\n        // disconnect obsever on leave\n        observer.current.disconnect();\n      }\n\n      leaveCountRef.current += 1;\n      inViewportRef.current = isInViewport;\n      forceUpdate(isInViewport);\n    }\n  }\n\n  function initIntersectionObserver(_ref3) {\n    var {\n      observerRef\n    } = _ref3;\n\n    if (!observerRef) {\n      // $FlowFixMe\n      observer.current = new IntersectionObserver(handleIntersection, options);\n      return observer.current;\n    }\n\n    return observerRef;\n  }\n\n  (0, _react.useEffect)(() => {\n    var observerRef = observer.current; // https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\n\n    observerRef = initIntersectionObserver({\n      observerRef\n    });\n    startObserver({\n      observerRef\n    });\n    return () => {\n      stopObserver({\n        observerRef\n      });\n    };\n  }, [target.current, options, config, onEnterViewport, onLeaveViewport]);\n  return {\n    inViewport: inViewportRef.current,\n    enterCount: enterCountRef.current,\n    leaveCount: leaveCountRef.current\n  };\n};\n\nvar _default = useInViewport;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}